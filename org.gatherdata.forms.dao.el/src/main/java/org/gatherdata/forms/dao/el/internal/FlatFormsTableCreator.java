package org.gatherdata.forms.dao.el.internal;

import org.eclipse.persistence.sessions.*;
import org.eclipse.persistence.tools.schemaframework.*;

/**
 * This class was generated by the TopLink table creator generator.
 * It stores the meta-data (tables) that define the database schema.
 * @see org.eclipse.persistence.sessions.factories.TableCreatorClassGenerator
 */

public class FlatFormsTableCreator extends org.eclipse.persistence.tools.schemaframework.TableCreator {

public FlatFormsTableCreator() {
	setName("GatherForms");
	
	addTableDefinition(buildFLATFORMTable());
	addTableDefinition(buildRENDEREDVALUETable());
	addTableDefinition(buildSEQUENCETable());
}

public TableDefinition buildFLATFORMTable() {
	TableDefinition table = new TableDefinition();
	table.setName("FLATFORM");
	
	FieldDefinition fieldCBID = new FieldDefinition();
	fieldCBID.setName("CBID");
	fieldCBID.setTypeName("VARCHAR");
	fieldCBID.setSize(0);
	fieldCBID.setSubSize(0);
	fieldCBID.setIsPrimaryKey(false);
	fieldCBID.setIsIdentity(false);
	fieldCBID.setUnique(false);
	fieldCBID.setShouldAllowNull(false);
	table.addField(fieldCBID);
	
	FieldDefinition fieldDATE_STORED = new FieldDefinition();
	fieldDATE_STORED.setName("DATE_STORED");
	fieldDATE_STORED.setTypeName("DATE");
	fieldDATE_STORED.setSize(0);
	fieldDATE_STORED.setSubSize(0);
	fieldDATE_STORED.setIsPrimaryKey(false);
	fieldDATE_STORED.setIsIdentity(false);
	fieldDATE_STORED.setUnique(false);
	fieldDATE_STORED.setShouldAllowNull(false);
	table.addField(fieldDATE_STORED);
	
	FieldDefinition fieldID = new FieldDefinition();
	fieldID.setName("ID");
	fieldID.setTypeName("INTEGER");
	fieldID.setSize(0);
	fieldID.setSubSize(0);
	fieldID.setIsPrimaryKey(true);
	fieldID.setIsIdentity(false);
	fieldID.setUnique(false);
	fieldID.setShouldAllowNull(false);
	table.addField(fieldID);
	
	FieldDefinition fieldNAMESPACE = new FieldDefinition();
	fieldNAMESPACE.setName("NAMESPACE");
	fieldNAMESPACE.setTypeName("VARCHAR");
	fieldNAMESPACE.setSize(0);
	fieldNAMESPACE.setSubSize(0);
	fieldNAMESPACE.setIsPrimaryKey(false);
	fieldNAMESPACE.setIsIdentity(false);
	fieldNAMESPACE.setUnique(false);
	fieldNAMESPACE.setShouldAllowNull(false);
	table.addField(fieldNAMESPACE);
	
	return table;
}

public TableDefinition buildRENDEREDVALUETable() {
	TableDefinition table = new TableDefinition();
	table.setName("RENDEREDVALUE");
	
	FieldDefinition fieldDATE_STORED = new FieldDefinition();
	fieldDATE_STORED.setName("DATE_STORED");
	fieldDATE_STORED.setTypeName("DATE");
	fieldDATE_STORED.setSize(0);
	fieldDATE_STORED.setSubSize(0);
	fieldDATE_STORED.setIsPrimaryKey(false);
	fieldDATE_STORED.setIsIdentity(false);
	fieldDATE_STORED.setUnique(false);
	fieldDATE_STORED.setShouldAllowNull(false);
	table.addField(fieldDATE_STORED);
	
	FieldDefinition fieldFORM = new FieldDefinition();
	fieldFORM.setName("FORM");
	fieldFORM.setTypeName("INTEGER");
	fieldFORM.setSize(0);
	fieldFORM.setSubSize(0);
	fieldFORM.setIsPrimaryKey(false);
	fieldFORM.setIsIdentity(false);
	fieldFORM.setUnique(false);
	fieldFORM.setShouldAllowNull(false);
	table.addField(fieldFORM);
	
	FieldDefinition fieldID = new FieldDefinition();
	fieldID.setName("ID");
	fieldID.setTypeName("INTEGER");
	fieldID.setSize(0);
	fieldID.setSubSize(0);
	fieldID.setIsPrimaryKey(true);
	fieldID.setIsIdentity(false);
	fieldID.setUnique(false);
	fieldID.setShouldAllowNull(false);
	table.addField(fieldID);
	
	FieldDefinition fieldNAMESPACE = new FieldDefinition();
	fieldNAMESPACE.setName("NAMESPACE");
	fieldNAMESPACE.setTypeName("VARCHAR");
	fieldNAMESPACE.setSize(0);
	fieldNAMESPACE.setSubSize(0);
	fieldNAMESPACE.setIsPrimaryKey(false);
	fieldNAMESPACE.setIsIdentity(false);
	fieldNAMESPACE.setUnique(false);
	fieldNAMESPACE.setShouldAllowNull(false);
	table.addField(fieldNAMESPACE);
	
	FieldDefinition fieldPATH = new FieldDefinition();
	fieldPATH.setName("PATH");
	fieldPATH.setTypeName("VARCHAR");
	fieldPATH.setSize(0);
	fieldPATH.setSubSize(0);
	fieldPATH.setIsPrimaryKey(false);
	fieldPATH.setIsIdentity(false);
	fieldPATH.setUnique(false);
	fieldPATH.setShouldAllowNull(false);
	table.addField(fieldPATH);
	
	FieldDefinition fieldTAG = new FieldDefinition();
	fieldTAG.setName("TAG");
	fieldTAG.setTypeName("VARCHAR");
	fieldTAG.setSize(0);
	fieldTAG.setSubSize(0);
	fieldTAG.setIsPrimaryKey(false);
	fieldTAG.setIsIdentity(false);
	fieldTAG.setUnique(false);
	fieldTAG.setShouldAllowNull(false);
	table.addField(fieldTAG);
	
	FieldDefinition fieldVALUE_AS_DATE = new FieldDefinition();
	fieldVALUE_AS_DATE.setName("VALUE_AS_DATE");
	fieldVALUE_AS_DATE.setTypeName("DATE");
	fieldVALUE_AS_DATE.setSize(0);
	fieldVALUE_AS_DATE.setSubSize(0);
	fieldVALUE_AS_DATE.setIsPrimaryKey(false);
	fieldVALUE_AS_DATE.setIsIdentity(false);
	fieldVALUE_AS_DATE.setUnique(false);
	fieldVALUE_AS_DATE.setShouldAllowNull(true);
	table.addField(fieldVALUE_AS_DATE);
	
	FieldDefinition fieldVALUE_AS_FLOAT = new FieldDefinition();
	fieldVALUE_AS_FLOAT.setName("VALUE_AS_FLOAT");
	fieldVALUE_AS_FLOAT.setTypeName("REAL");
	fieldVALUE_AS_FLOAT.setSize(0);
	fieldVALUE_AS_FLOAT.setSubSize(0);
	fieldVALUE_AS_FLOAT.setIsPrimaryKey(false);
	fieldVALUE_AS_FLOAT.setIsIdentity(false);
	fieldVALUE_AS_FLOAT.setUnique(false);
	fieldVALUE_AS_FLOAT.setShouldAllowNull(true);
	table.addField(fieldVALUE_AS_FLOAT);
	
	FieldDefinition fieldVALUE_AS_INT = new FieldDefinition();
	fieldVALUE_AS_INT.setName("VALUE_AS_INT");
	fieldVALUE_AS_INT.setTypeName("INTEGER");
	fieldVALUE_AS_INT.setSize(0);
	fieldVALUE_AS_INT.setSubSize(0);
	fieldVALUE_AS_INT.setIsPrimaryKey(false);
	fieldVALUE_AS_INT.setIsIdentity(false);
	fieldVALUE_AS_INT.setUnique(false);
	fieldVALUE_AS_INT.setShouldAllowNull(true);
	table.addField(fieldVALUE_AS_INT);
	
	FieldDefinition fieldVALUE_AS_STRING = new FieldDefinition();
	fieldVALUE_AS_STRING.setName("VALUE_AS_STRING");
	fieldVALUE_AS_STRING.setTypeName("VARCHAR");
	fieldVALUE_AS_STRING.setSize(0);
	fieldVALUE_AS_STRING.setSubSize(0);
	fieldVALUE_AS_STRING.setIsPrimaryKey(false);
	fieldVALUE_AS_STRING.setIsIdentity(false);
	fieldVALUE_AS_STRING.setUnique(false);
	fieldVALUE_AS_STRING.setShouldAllowNull(true);
	table.addField(fieldVALUE_AS_STRING);
	
	FieldDefinition fieldVOIDED = new FieldDefinition();
	fieldVOIDED.setName("VOIDED");
	fieldVOIDED.setTypeName("BOOLEAN");
	fieldVOIDED.setSize(0);
	fieldVOIDED.setSubSize(0);
	fieldVOIDED.setIsPrimaryKey(false);
	fieldVOIDED.setIsIdentity(false);
	fieldVOIDED.setUnique(false);
	fieldVOIDED.setShouldAllowNull(false);
	table.addField(fieldVOIDED);
	
	return table;
}

public TableDefinition buildSEQUENCETable() {
	TableDefinition table = new TableDefinition();
	table.setName("SEQUENCE");
	
	FieldDefinition fieldSEQ_COUNT = new FieldDefinition();
	fieldSEQ_COUNT.setName("SEQ_COUNT");
	fieldSEQ_COUNT.setTypeName("VARCHAR");
	fieldSEQ_COUNT.setSize(0);
	fieldSEQ_COUNT.setSubSize(0);
	fieldSEQ_COUNT.setIsPrimaryKey(false);
	fieldSEQ_COUNT.setIsIdentity(false);
	fieldSEQ_COUNT.setUnique(false);
	fieldSEQ_COUNT.setShouldAllowNull(false);
	table.addField(fieldSEQ_COUNT);
	
	FieldDefinition fieldSEQ_NAME = new FieldDefinition();
	fieldSEQ_NAME.setName("SEQ_NAME");
	fieldSEQ_NAME.setTypeName("INTEGER");
	fieldSEQ_NAME.setSize(0);
	fieldSEQ_NAME.setSubSize(0);
	fieldSEQ_NAME.setIsPrimaryKey(false);
	fieldSEQ_NAME.setIsIdentity(false);
	fieldSEQ_NAME.setUnique(false);
	fieldSEQ_NAME.setShouldAllowNull(false);
	table.addField(fieldSEQ_NAME);
	
	return table;
}

}
